{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\COMPUMARTS\\\\application\\\\src\\\\components\\\\Head.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport '../index.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Head() {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const [list, setList] = useState([]);\n  const [placeHolder, setPlaceHolder] = useState('e.g. organo');\n  function handleInputValue(event) {\n    setInputValue(event.target.value);\n  }\n  function handleClick() {\n    console.log(inputValue);\n    if (inputValue !== '') {\n      setInputValue('');\n      setList(prev => [...prev, inputValue]);\n      console.log(list); // still not updated because setList is  asynchronous\n    } else {\n      setPlaceHolder('Please enter something');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"head-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: inputValue,\n        placeholder: placeHolder,\n        onChange: handleInputValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleClick,\n        children: \"Add ingredient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: list.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: item\n        }, item, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 37\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Head, \"QvkMlPsagv44CP/zl8Jyt8tHB0s=\");\n_c = Head;\nexport default Head;\nvar _c;\n$RefreshReg$(_c, \"Head\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Head","_s","inputValue","setInputValue","list","setList","placeHolder","setPlaceHolder","handleInputValue","event","target","value","handleClick","console","log","prev","children","className","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","map","item","index","_c","$RefreshReg$"],"sources":["C:/Users/COMPUMARTS/application/src/components/Head.js"],"sourcesContent":["import { useState } from 'react'\r\nimport '../index.css'\r\n\r\nfunction Head() {\r\n  const [ inputValue , setInputValue ] = useState('')\r\n  const [ list , setList ] = useState([])\r\n  const [ placeHolder, setPlaceHolder ] = useState('e.g. organo')\r\n\r\n  function handleInputValue(event) {\r\n    setInputValue(event.target.value)\r\n  }\r\n\r\n  function handleClick() {\r\n      console.log(inputValue)\r\n      if (inputValue !== '') {\r\n        setInputValue('')\r\n        setList(prev => [...prev, inputValue])\r\n        console.log(list) // still not updated because setList is  asynchronous\r\n      } else {\r\n        setPlaceHolder('Please enter something')\r\n      }\r\n\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form className=\"head-container\">\r\n        <input \r\n        value = {inputValue}  placeholder= {placeHolder}\r\n        onChange = {handleInputValue} ></input>\r\n        <button type = \"button\" onClick= {handleClick} >Add ingredient</button>\r\n      </form>\r\n      <form>\r\n        <ul>\r\n        {list.map((item,index) => ( <li key= {item}>{item}</li>))}\r\n        </ul>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default Head"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErB,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAAEC,UAAU,EAAGC,aAAa,CAAE,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACnD,MAAM,CAAES,IAAI,EAAGC,OAAO,CAAE,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACvC,MAAM,CAAEW,WAAW,EAAEC,cAAc,CAAE,GAAGZ,QAAQ,CAAC,aAAa,CAAC;EAE/D,SAASa,gBAAgBA,CAACC,KAAK,EAAE;IAC/BN,aAAa,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC;EAEA,SAASC,WAAWA,CAAA,EAAG;IACnBC,OAAO,CAACC,GAAG,CAACZ,UAAU,CAAC;IACvB,IAAIA,UAAU,KAAK,EAAE,EAAE;MACrBC,aAAa,CAAC,EAAE,CAAC;MACjBE,OAAO,CAACU,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEb,UAAU,CAAC,CAAC;MACtCW,OAAO,CAACC,GAAG,CAACV,IAAI,CAAC,EAAC;IACpB,CAAC,MAAM;MACLG,cAAc,CAAC,wBAAwB,CAAC;IAC1C;EAGJ;EAEA,oBACEV,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBACEnB,OAAA;MAAMoB,SAAS,EAAC,gBAAgB;MAAAD,QAAA,gBAC9BnB,OAAA;QACAc,KAAK,EAAIT,UAAW;QAAEgB,WAAW,EAAGZ,WAAY;QAChDa,QAAQ,EAAIX;MAAiB;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eACvC1B,OAAA;QAAQ2B,IAAI,EAAG,QAAQ;QAACC,OAAO,EAAGb,WAAY;QAAAI,QAAA,EAAE;MAAc;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnE,CAAC,eACP1B,OAAA;MAAAmB,QAAA,eACEnB,OAAA;QAAAmB,QAAA,EACCZ,IAAI,CAACsB,GAAG,CAAC,CAACC,IAAI,EAACC,KAAK,kBAAO/B,OAAA;UAAAmB,QAAA,EAAiBW;QAAI,GAAXA,IAAI;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA,eACP,CAAC;AAEP;AAACtB,EAAA,CArCQD,IAAI;AAAA6B,EAAA,GAAJ7B,IAAI;AAwCb,eAAeA,IAAI;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}